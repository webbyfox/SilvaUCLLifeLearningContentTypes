<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html tal:omit-tag=""
      lang="en"
      xml:lang="en"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:notal="http://www.infrae.com/silva/notal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="silvanews"
      tal:define="unapproved_version model/get_unapproved_version">

<metal:define-macro metal:define-macro="editor">
<metal:use-macro metal:use-macro="here/macro_index/macros/master">

<metal:fill-slot fill-slot="metatype_css">
<tal:condition condition="not: model/get_unapproved_version">
<link rel="stylesheet"
      type="text/css"
      tal:attributes="href here/frontend.css/absolute_url | nothing" />
<style type="text/css">
div.public {
  margin-top: 1em;
  margin-left: 16px;
  padding: 0.3em 1em 0.7em;
  border: 1px solid #789;
  background-color: #e3ecf7;}
h2 {
  margin-top: 0.3em;
}
</style>
</tal:condition>
<base tal:attributes="href string:${model/absolute_url}/edit/" />
<metal:block define-slot="editor_css" />
</metal:fill-slot>

<metal:block fill-slot="refresher">
  <metal:block define-slot="editor_refresher" />
</metal:block>

<metal:block fill-slot="script">
  <metal:block define-slot="script" />
</metal:block>

<metal:block fill-slot="middleground">
 <tal:buttons tal:replace="structure model/@@tab_edit_extra" />
</metal:block>

<span tal:replace="nothing"> ______________ author may not edit: notify why ______________ </span>
<metal:fill-slot fill-slot="notice"
  tal:define="
    is_locked model/sec_is_locked;
    request_pending python:model.is_version_approval_requested();
    unapproved_version model/get_unapproved_version">
<span tal:replace="nothing"> _______ simultaneous edit lock _______ </span>
<tal:condition condition="python:unapproved_version and is_locked">
  <div class="fixed-feedback">
    <form action="tab_edit_break_lock" method="POST">
      <span class="warning">
        <tal:block i18n:translate="">
          <strong i18n:name="note"><tal:block i18n:translate="">Note:</tal:block></strong> This object is already being edited by another user,
          and is temporarily locked.
        </tal:block>
      </span><br />
      <input
        class="warning"
        style="margin-left: 7px; margin-bottom:0.1em;"
        type="submit"
        value="break lock"
        title="Somebody else just edited this item, unlock it: alt-u"
        accesskey="u"
        i18n:attributes="value;title"/>
    </form>
  </div>
</tal:condition>

<span tal:replace="nothing"> _______ make changes in a new version _______ </span>
<tal:condition condition="python: not model.get_next_version()">
<div class="fixed-feedback"
  style="padding:3px 16px">
  <form action="tab_edit_make_copy" method="POST">
    <tal:note replace="nothing"> _ do not change the value attribute _ </tal:note>
    <input type="hidden"
      name="came_from_view"
      value="tab_edit_make_copy"
    />
    <tal:block i18n:translate="">
      <strong i18n:name="note"><tal:block i18n:translate="">Note:</tal:block></strong> there is already a published or closed version of this
      content. Changes can only be made in a new version.
    </tal:block><br >
    <button class="button"
      style="font-size:100%"
      type="submit"
      title="work on a new version while the previous one stays online: alt-n"
      accesskey="n"
      i18n:attributes="title"
      i18n:translate="">
      new version
    </button>
  </form>
</div>
</tal:condition>

<span tal:replace="nothing"> _______ make changes after revoking approval _______ </span>
<tal:condition condition="python: model.get_approved_version()">
  <div class="fixed-feedback">
    <form action="tab_edit_revoke_approval" method="POST">
      <input class="button"
        style="margin-left: 7px; margin-bottom:0.1em;"
        type="submit"
        value="revoke approval"
        title="'first un-approve' this item in order to edit: alt-r"
        accesskey="r"
        i18n:attributes="value;title"/>
        <span i18n:translate="">
          <strong i18n:name="note"><tal:block i18n:translate="">Note:</tal:block></strong> this version is approved but not yet public. In order to make changes you need to first revoke the approval.
        </span>
    </form>
  </div>
</tal:condition>

<span tal:replace="nothing"> _______ make changes after withdraw approval request _______ </span>
<tal:condition condition="python:model.is_version_approval_requested()">
  <div class="fixed-feedback">
    <form action="tab_edit_withdraw" method="POST">
      <input class="button"
        style="margin-left: 7px; margin-bottom:0.1em;"
        type="submit"
        value="withdraw request"
        title="withdraw a request for approval in order to edit: alt-w"
        accesskey="w"
        i18n:attributes="value;title"/>
      <input type="hidden" name="rejection_status" tal:attributes="value python:test(may_approve_content, 'true', 'false')" />
      <input type="hidden" name="tab_name" value="edit" />
      <span i18n:translate="">
        <strong i18n:name="note"><tal:block i18n:translate="">Note:</tal:block></strong> this version has an request for approval pending. In order to make changes you need to first withdraw the pending request.
      </span>
    </form>
  </div>
</tal:condition>

</metal:fill-slot>

<span tal:replace="nothing"> ______________ author may edit ______________ </span>
<metal:fill-slot fill-slot="main"
  tal:define="
    is_locked model/sec_is_locked;
    request_pending python:model.is_version_approval_requested();
    previewable_version model/get_previewable;
    unapproved_version model/get_unapproved_version">
  <span tal:replace="nothing"> _________ show editor ____ </span>
  <tal:edit condition="python:unapproved_version and not request_pending and not is_locked">
    <metal:plug define-slot="editor_content" />
  </tal:edit>

  <span tal:replace="nothing"> _________ or preview document ____ </span>
  <tal:preview tal:condition="python: not unapproved_version and previewable_version is not None">
    <metal:use use-macro="here/macro_coursepage/macros/infobox">
      this will insert an info box for social components
    </metal:use>
    <div class="public" style="margin-top: 1.5em;">
      <h2 class="heading" tal:content="previewable_version/get_title"></h2>
      <tal:text tal:content="structure previewable_version/content/render" />
    </div>
    <br clear="both" />
  </tal:preview>
</metal:fill-slot>

<tal:note replace="nothing"> if kupu is live percolate signal upwards</tal:note>
<metal:fill fill-slot="editorcheck">
  <metal:plug define-slot="editorcheck" />
  <tal:set define="global nofeedback nofeedback | nothing" />
</metal:fill>

</metal:use-macro>
</metal:define-macro>
</html>
